{"version":3,"sources":["../../../Manage/Admin/client/js/widgets.js"],"names":["Vue","component","mixins","widgetsMixin","data","dialogVisible","dialogTitle","settingsUrl","mounted","initSettingsUpdatedHandler","methods","add","evt","fromInfos","from","id","dto","areaToId","to","index","newIndex","folder","widgetId","areaFromId","name","title","widgetInfos","oldIndex","area","widgetAreas","find","a","widgetIns","widgetInstances","axios","post","$root","headers","then","resp","areaTo","splice","areaFrom","catch","toastError","sort","widgetInst","areaId","viewSettings","widget","deleteWidget","confirm","delete","widx","indexOf","closeDialog","self","window","document","addEventListener","e","detail","w","toast","msg"],"mappings":"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","sourcesContent":["ï»¿Vue.component('widgets', {\r\n    mixins: [widgetsMixin],\r\n    data: () => ({\r\n        dialogVisible: false,\r\n        dialogTitle: '',\r\n        settingsUrl: null,\r\n    }),\r\n    mounted() {\r\n        this.initSettingsUpdatedHandler();\r\n    },\r\n    methods: {\r\n        /**\r\n         * When user drags a widget from info's section or an area to an area.\r\n         * @@param evt\r\n         */\r\n        add(evt) {\r\n            let fromInfos = evt.from.id === 'widget-infos';\r\n            let dto = {\r\n                areaToId: evt.to.id,\r\n                index: evt.newIndex,\r\n                folder: null,\r\n                widgetId: 0,\r\n                areaFromId: null,\r\n                name: null,\r\n                title: null,\r\n            };\r\n\r\n            if (fromInfos) {\r\n                dto.folder = this.widgetInfos[evt.oldIndex].folder;\r\n            }\r\n            else {\r\n                let area = this.widgetAreas.find(a => a.id === evt.from.id);\r\n                let widgetIns = area.widgetInstances[evt.oldIndex];\r\n\r\n                dto.folder = widgetIns.folder;\r\n                dto.widgetId = widgetIns.id;\r\n                dto.areaFromId = evt.from.id;\r\n                dto.name = widgetIns.name;\r\n                dto.title = widgetIns.title;\r\n            }\r\n\r\n            axios.post('/admin/widgets?handler=add', dto, this.$root.headers)\r\n                .then(resp => {\r\n                    let areaTo = this.widgetAreas.find(a => a.id === evt.to.id);\r\n                    if (fromInfos) {\r\n                        areaTo.widgetInstances.splice(evt.newIndex, 0, resp.data);\r\n                    }\r\n                    else {\r\n                        // remove from widget from old area\r\n                        let areaFrom = this.widgetAreas.find(a => a.id === evt.from.id);\r\n                        areaFrom.widgetInstances.splice(evt.oldIndex, 1);\r\n                        // add to new area\r\n                        areaTo.widgetInstances.splice(evt.newIndex, 0, resp.data);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.$root.toastError('Add widget failed.');\r\n                });\r\n        },\r\n        /**\r\n         * When user drags a widget instance to reorder it within an area.\r\n         * @@param evt\r\n         */\r\n        sort(evt) {\r\n            if (evt.from.id !== evt.to.id) return;\r\n            console.log(\"ordering... \");\r\n\r\n            let area = this.widgetAreas.find(a => a.id === evt.from.id);\r\n            let widgetInst = area.widgetInstances[evt.oldIndex];\r\n            let dto = {\r\n                index: evt.newIndex,\r\n                widgetId: widgetInst.id,\r\n                areaId: evt.from.id,\r\n            };\r\n\r\n            axios.post('/admin/widgets?handler=reorder', dto, this.$root.headers)\r\n                .then(() => {\r\n                    // remove from old index and add to new index\r\n                    area.widgetInstances.splice(evt.oldIndex, 1);\r\n                    area.widgetInstances.splice(evt.newIndex, 0, widgetInst);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.$root.toastError('Order widget failed.');\r\n                });\r\n        },\r\n        /**\r\n         * When user clicks on edit icon on an widget instance.\r\n         * @@param widget\r\n         */\r\n        viewSettings(widget) {\r\n            this.dialogTitle = widget.name;\r\n            this.dialogVisible = true;\r\n            this.settingsUrl = widget.settingsUrl;\r\n        },\r\n        /**\r\n         * When user clicks on delete icon on an widget instance.\r\n         * @@param widget\r\n         * @@param areaId\r\n         */\r\n        deleteWidget(widget, areaId) {\r\n            console.log(\"deleting widget: \", widget);\r\n            if (confirm(`Are you sure to delete the widget?`)) {\r\n                axios.delete(`/admin/widgets?widgetId=${widget.id}&areaId=${areaId}`, this.$root.headers)\r\n                    .then(() => {\r\n                        let area = this.widgetAreas.find(a => a.id === areaId);\r\n                        let widx = area.widgetInstances.indexOf(widget);\r\n                        area.widgetInstances.splice(widx, 1);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        this.$root.toastError('Delete widget failed.');\r\n                    });\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.dialogVisible = false;\r\n        },\r\n        /**\r\n         * Handles ExtSettingsUpdated event.\r\n         */\r\n        initSettingsUpdatedHandler() {\r\n            let self = this;\r\n            window.document.addEventListener('ExtSettingsUpdated', e => {\r\n                console.log('widget settings updated: ', e.detail);\r\n\r\n                // update the widget title\r\n                let area = self.widgetAreas.find(a => a.id === e.detail.areaId);\r\n                let widgetIns = area.widgetInstances.find(w => w.id === e.detail.widgetId);\r\n                widgetIns.title = e.detail.title;\r\n\r\n                // show toast and close dialog\r\n                self.$root.toast(e.detail.msg);\r\n                self.closeDialog();\r\n            });\r\n        },\r\n    }\r\n});\r\n"],"file":"widgets.js"}