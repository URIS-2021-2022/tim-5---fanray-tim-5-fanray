{"version":3,"sources":["../../../Manage/Admin/client/js/blog-media.js"],"names":["store","Vuex","Store","strict","state","selectedImages","errMsg","mutations","setSelectedImages","newSelectedImages","addSelectedImage","image","push","removeSelectedImage","idx","splice","setErrMsg","newMsg","actions","selectImage","commit","deselectImage","emptySelectedImages","msg","emptyErrMsg","Vue","component","template","mixins","mediaMixin","props","data","editDialogVisible","progressDialog","pageNumber","selectedImageIdx","totalFileCount","isEditor","fileInput","mounted","initWindowDnd","initFileInput","mode","initImages","computed","showMoreVisible","count","images","length","leftArrowVisible","rightArrowVisible","$store","methods","window","addEventListener","document","querySelector","style","visibility","opacity","e","preventDefault","self","dragFilesUpload","dataTransfer","files","sendImages","getFormData","getElementById","chooseFilesUpload","click","fileList","formData","FormData","dispatch","invalidTypeCount","invalidSizeCount","fileArray","i","file","valid","validFileTypes","forEach","type","name","substr","toLowerCase","size","maxImageFileSize","append","errFileType","errFileSize","axios","post","$root","headers","then","resp","uploadedCount","img","unshift","toast","errorMessages","catch","toastError","insertImages","get","medias","clickImage","findIndex","id","selected","leftArrow","rightArrow","showMore","pageSize","url","found","some","editImages","deleteImages","confirm","selectedCount","ids","updateImage","closeEditDialog","closeMediaDialog"],"mappings":"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","sourcesContent":["ï»¿// media store\r\nlet store = new Vuex.Store({\r\n    strict: true,\r\n    state: {\r\n        selectedImages: [],\r\n        errMsg: '',\r\n    },\r\n    mutations: {\r\n        setSelectedImages(state, newSelectedImages) {\r\n            state.selectedImages = newSelectedImages;\r\n        },\r\n        addSelectedImage(state, image) {\r\n            state.selectedImages.push(image);\r\n        },\r\n        removeSelectedImage(state, idx) {\r\n            state.selectedImages.splice(idx, 1);\r\n        },\r\n        setErrMsg(state, newMsg) {\r\n            if (!newMsg) state.errMsg = newMsg;\r\n            else state.errMsg += newMsg;\r\n        },\r\n    },\r\n    actions: {\r\n        selectImage: function ({ commit }, image) {\r\n            commit('addSelectedImage', image);\r\n        },\r\n        deselectImage: function ({ commit }, idx) {\r\n            commit('removeSelectedImage', idx);\r\n        },\r\n        emptySelectedImages({ commit }) {\r\n            commit('setSelectedImages', []);\r\n        },\r\n        setErrMsg({ commit }, msg) {\r\n            commit('setErrMsg', msg);\r\n        },\r\n        emptyErrMsg({ commit }) {\r\n            commit('setErrMsg', '');\r\n        },\r\n    },\r\n});\r\n\r\n// media component\r\nVue.component('blog-media', {\r\n    template: '#blog-media-template',\r\n    mixins: [mediaMixin],\r\n    props: ['mode'],\r\n    store, // required when media runs solo\r\n    data: () => ({\r\n        editDialogVisible: false,\r\n        progressDialog: false,\r\n        pageNumber: 1,\r\n        selectedImageIdx: 0,\r\n        totalFileCount: 0,\r\n        isEditor: false,\r\n        fileInput: null,\r\n    }),\r\n    mounted() {\r\n        this.initWindowDnd();\r\n        this.initFileInput();\r\n        if (this.mode === 'editor') {\r\n            this.isEditor = true;\r\n            console.log(\"media gallery in editor mode, loading images...\");\r\n            this.initImages();\r\n        }\r\n    },\r\n    computed: {\r\n        showMoreVisible: function () {\r\n            return this.count > this.images.length;\r\n        },\r\n        leftArrowVisible: function () {\r\n            return this.selectedImages.length > 1 && this.selectedImageIdx > 0;\r\n        },\r\n        rightArrowVisible() {\r\n            return this.selectedImages.length > 1 && this.selectedImageIdx < this.selectedImages.length - 1;\r\n        },\r\n        selectedImages() { // from store\r\n            return this.$store.state.selectedImages;\r\n        },\r\n        errMsg() {\r\n            return this.$store.state.errMsg;\r\n        },\r\n    },\r\n    methods: {\r\n        /**\r\n         * Initialize window drag drop events.\r\n         */\r\n        initWindowDnd() {\r\n            window.addEventListener(\"dragenter\", function (e) {\r\n                document.querySelector(\"#dropzone\").style.visibility = \"\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 1;\r\n            });\r\n\r\n            window.addEventListener(\"dragleave\", function (e) {\r\n                e.preventDefault();\r\n                document.querySelector(\"#dropzone\").style.visibility = \"hidden\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 0;\r\n            });\r\n\r\n            window.addEventListener(\"dragover\", function (e) {\r\n                e.preventDefault();\r\n                document.querySelector(\"#dropzone\").style.visibility = \"\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 1;\r\n            });\r\n\r\n            let self = this;\r\n            window.addEventListener(\"drop\", function (e) {\r\n                e.preventDefault();\r\n                document.querySelector(\"#dropzone\").style.visibility = \"hidden\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 0;\r\n                self.dragFilesUpload(e.dataTransfer.files);\r\n            });\r\n        },\r\n        /**\r\n         * Drag files to drop over browser to upload.\r\n         * @param {any} files\r\n         */\r\n        dragFilesUpload(files) {\r\n            if (!files.length) return;\r\n            this.sendImages(this.getFormData(files));\r\n        },\r\n        /**\r\n         * File input init and click Upload button to choose files to upload.\r\n         * Note: I couldn't do input.onchange because MS Edge does not support it.\r\n         */\r\n        initFileInput() {\r\n            let self = this;\r\n            this.fileInput = document.getElementById(\"fileInput\");\r\n            this.fileInput.addEventListener(\"change\", function () {\r\n                self.sendImages(self.getFormData(self.fileInput.files));\r\n            }, false);\r\n        },\r\n        chooseFilesUpload() {\r\n            this.fileInput.click();\r\n        },\r\n        /**\r\n         * Helper to get formData for dragFilesUpload and chooseFilesUpload.\r\n         * It also valid files for type and size and update errMsg as necessary.\r\n         */\r\n        getFormData(fileList) {\r\n            this.progressDialog = true;\r\n            const formData = new FormData();\r\n            this.totalFileCount = fileList.length;\r\n            this.$store.dispatch('emptyErrMsg');\r\n\r\n            let invalidTypeCount = 0;\r\n            let invalidSizeCount = 0;\r\n            let fileArray = [];\r\n            for (let i = 0; i < this.totalFileCount; i++) {\r\n                let file = fileList[i];\r\n                let valid = false;\r\n\r\n                // check file type\r\n                this.validFileTypes.forEach(type => {\r\n                    if (file.name.substr(file.name.length - type.length, type.length).toLowerCase() === type.toLowerCase()) {\r\n                        valid = true;\r\n                        return;\r\n                    }\r\n                });\r\n\r\n                // add file if valid type and size\r\n                if (valid) {\r\n                    if (file.size <= this.maxImageFileSize) fileArray.push(file);\r\n                    else invalidSizeCount++;\r\n                }\r\n                else invalidTypeCount++;\r\n            }\r\n\r\n            // add good files to formData\r\n            console.log('fileArray: ', fileArray);\r\n            fileArray.forEach(file => formData.append('images', file));\r\n\r\n            // append appropriate error messages\r\n            if (invalidTypeCount > 0) this.$store.dispatch('setErrMsg', this.errFileType + ' ');\r\n            if (invalidSizeCount > 0) this.$store.dispatch('setErrMsg', this.errFileSize + ' ');\r\n\r\n            return formData;\r\n        },\r\n        /**\r\n         * Send files to server. The API returns ImageData with a list of media just uploaded and errorMessage if\r\n         * there is any media not able to be uploaded.\r\n         * @param {any} formData\r\n         */\r\n        sendImages(formData) {\r\n            axios.post('/admin/media?handler=image', formData, this.$root.headers)\r\n                .then(resp => {\r\n                    let uploadedCount = resp.data.images.length;\r\n\r\n                    if (uploadedCount > 0) {\r\n                        resp.data.images.forEach(img => this.images.unshift(img));\r\n                        this.count += uploadedCount; // inc total number of image by the number of added images\r\n                        console.log(`${uploadedCount} images uploaded, now you have total ${this.count} images.`);\r\n                        this.$root.toast('Image uploaded.');\r\n                    }\r\n\r\n                    // handle err msgs\r\n                    if (resp.data.errorMessages.length > 0)\r\n                        resp.data.errorMessages.forEach(msg => this.$store.dispatch('setErrMsg', msg + ' '));\r\n\r\n                    if (this.errMsg)\r\n                        this.$store.dispatch('setErrMsg', `${uploadedCount} of ${this.totalFileCount} files were uploaded.`);\r\n\r\n                    this.progressDialog = false;\r\n                })\r\n                .catch(err => {\r\n                    this.progressDialog = false;\r\n                    this.$root.toastError('Image upload failed.');\r\n                    console.log(err);\r\n                });\r\n        },\r\n        insertImages() {\r\n            this.$root.insertImages();\r\n        },\r\n        /**\r\n        * Retrieve first page of images in editor mode.\r\n        */\r\n        initImages() {\r\n            let url = `/admin/media?handler=images`;\r\n            axios.get(url).then(resp => {\r\n                this.images = resp.data.medias;\r\n                this.count = resp.data.count;\r\n            }).catch(err => console.log(err));\r\n        },\r\n        /**\r\n         * Clicks on an image to select it.\r\n         * @param {any} image\r\n         */\r\n        clickImage(image) {\r\n            let idx = this.selectedImages.findIndex(img => img.id === image.id);\r\n\r\n            if (idx !== -1) {\r\n                image.selected = false;\r\n                this.$store.dispatch('deselectImage', idx);\r\n            }\r\n            else {\r\n                image.selected = true;\r\n                this.$store.dispatch('selectImage', image);\r\n            }\r\n        },\r\n        /**\r\n         * When you select and edit multiple images, you can click arrows to traverse among them.\r\n         */\r\n        leftArrow() {\r\n            this.selectedImageIdx--;\r\n            console.log('leftArrow selectedImageIdx: ', this.selectedImageIdx)\r\n        },\r\n        rightArrow() {\r\n            this.selectedImageIdx++;\r\n            console.log('rightArrow selectedImageIdx: ', this.selectedImageIdx)\r\n        },\r\n        /**\r\n         * Clicks show more button to return next page of images.\r\n         */\r\n        showMore() {\r\n            this.pageNumber++;\r\n            // if user deletes an image, this will ensure to re-get current page before moving to next page\r\n            if (this.images.length < this.pageSize) this.pageNumber--;\r\n            let url = `/admin/media?handler=more&pageNumber=${this.pageNumber}`;\r\n            axios.get(url).then(resp => {\r\n                // returned data is the list of images\r\n                for (var i = 0; i < resp.data.length; i++) {\r\n                    // first make sure returned item is not already on the page\r\n                    var found = this.images.some(function (img) {\r\n                        return img.id === resp.data[i].id;\r\n                    });\r\n\r\n                    if (!found)\r\n                        this.images.push(resp.data[i]); // only append to images if not found\r\n                }\r\n            }).catch(err => console.log(err));\r\n        },\r\n        /**\r\n         * When user selects one or more images and clicks on edit button.\r\n         */\r\n        editImages() {\r\n            this.editDialogVisible = true;\r\n        },\r\n        deleteImages() {\r\n            if (confirm('Are you sure you want to delete the image(s)? They will no longer appear anywhere on your website. This cannot be undone!')) {\r\n                this.$store.dispatch('emptyErrMsg');\r\n\r\n                const selectedCount = this.selectedImages.length;\r\n                let ids = [];\r\n                for (var i = 0; i < selectedCount; i++) {\r\n                    ids.push(this.selectedImages[i].id);\r\n                }\r\n\r\n                let url = `/admin/media?handler=delete`;\r\n                axios.post(url, ids, this.$root.headers)\r\n                    .then(resp => {\r\n                        // remove selected images from images since they are deleted\r\n                        for (var i = 0; i < selectedCount; i++) {\r\n                            let idx = this.images.findIndex(img => img.id === this.selectedImages[i].id);\r\n                            this.images.splice(idx, 1);\r\n                        }\r\n\r\n                        // set selectedImages to empty\r\n                        this.$store.dispatch('emptySelectedImages');\r\n\r\n                        // dec total number of images\r\n                        this.count -= selectedCount;\r\n                        this.$root.toast('Image deleted.');\r\n                    })\r\n                    .catch(err => {\r\n                        this.$root.toastError('Image delete failed.');\r\n                        console.log(err);\r\n                    });\r\n            }\r\n        },\r\n        /**\r\n         * Updates an image info, it does not close the dialog.\r\n         */\r\n        updateImage() {\r\n            let url = `/admin/media?handler=update`;\r\n            axios.post(url, this.selectedImages[this.selectedImageIdx], this.$root.headers)\r\n                .then(resp => {\r\n                    this.$root.toast('Image updated.');\r\n                })\r\n                .catch(err => {\r\n                    this.$root.toastError('Image update failed.');\r\n                    console.log(err);\r\n                });\r\n        },\r\n        /**\r\n         * When user closes the edit dialog by hitting esc or close.\r\n         */\r\n        closeEditDialog() {\r\n            this.selectedImageIdx = 0;\r\n            this.editDialogVisible = false;\r\n        },\r\n        closeMediaDialog() {\r\n            this.$root.closeMediaDialog();\r\n        },\r\n    },\r\n});"],"file":"blog-media.js"}