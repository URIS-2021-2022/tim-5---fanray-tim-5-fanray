{"version":3,"sources":["../../../Manage/Admin/client/js/blog-settings.js"],"names":["Vue","component","mixins","settingsMixin","data","radioGroup","siteSettingsValid","blogSettingsValid","titleRules","v","trim","postPerPageRules","test","parseInt","errMsg","methods","saveSiteSettings","payload","title","tagline","timeZoneId","selectedTimeZoneId","googleAnalyticsTrackingID","ga","axios","post","$root","headers","then","toast","catch","err","response","errorMessage","saveBlogSettings","disqusShortname","postListDisplay","selectedPostListDisplay","allowComments","postPerPage"],"mappings":"AAACA,GAAG,CAACC,SAAJ,CAAc,eAAd,CAA+B,CAC5BC,MAAM,CAAE,CAACC,aAAD,CADoB,CAE5BC,IAAI,CAAE,KAAO,CACTC,UAAU,CAAE,CADH,CAETC,iBAAiB,GAFR,CAGTC,iBAAiB,GAHR,CAITC,UAAU,CAAE,CACRC,CAAC,EAAI,CAAC,CAACA,CAAC,CAACC,IAAF,EAAF,EAAc,UADX,CAJH,CAOTC,gBAAgB,CAAE,CACdF,CAAC,EAAI,CAAC,CAACA,CAAF,EAAO,UADE,CAEdA,CAAC,EAAI,WAAWG,IAAX,CAAgBH,CAAhB,GAAsB,cAFb,CAGdA,CAAC,EAAoB,CAAf,EAAAI,QAAQ,CAACJ,CAAD,CAAR,EAAmC,EAAf,EAAAI,QAAQ,CAACJ,CAAD,CAA7B,EAA2C,0BAHlC,CAPT,CAYTK,MAAM,CAAE,EAZC,CAAP,CAFsB,CAgB5BC,OAAO,CAAE,CACLC,gBAAgB,EAAG,CACf,GAAIC,CAAAA,CAAO,CAAG,CACVC,KAAK,CAAE,KAAKA,KADF,CAEVC,OAAO,CAAE,KAAKA,OAFJ,CAGVC,UAAU,CAAE,KAAKC,kBAHP,CAIVC,yBAAyB,CAAE,KAAKC,EAJtB,CAAd,CAMAC,KAAK,CAACC,IAAN,CAAW,sCAAX,CAAmDR,CAAnD,CAA4D,KAAKS,KAAL,CAAWC,OAAvE,EACKC,IADL,CACU,IAAQ,CACV,KAAKF,KAAL,CAAWG,KAAX,CAAiB,sBAAjB,CAAyC,CAAzC,CAA4C,OAA5C,CACH,CAHL,EAIKC,KAJL,CAIWC,CAAG,EAAI,CAEV,KAAKjB,MAAL,CAAciB,CAAG,CAACC,QAAJ,CAAa5B,IAAb,CAAkB,CAAlB,EAAqB6B,YACtC,CAPL,CAQH,CAhBI,CAiBLC,gBAAgB,EAAG,CACf,GAAIjB,CAAAA,CAAO,CAAG,CACVkB,eAAe,CAAE,KAAKA,eADZ,CAEVC,eAAe,CAAE,KAAKC,uBAFZ,CAGVC,aAAa,CAAE,KAAKA,aAHV,CAIVC,WAAW,CAAE,KAAKA,WAJR,CAAd,CAMAf,KAAK,CAACC,IAAN,CAAW,sCAAX,CAAmDR,CAAnD,CAA4D,KAAKS,KAAL,CAAWC,OAAvE,EACKC,IADL,CACU,IAAQ,CACV,KAAKF,KAAL,CAAWG,KAAX,CAAiB,sBAAjB,CAAyC,CAAzC,CAA4C,OAA5C,CACH,CAHL,EAIKC,KAJL,CAIWC,CAAG,EAAI,CAEV,KAAKjB,MAAL,CAAciB,CAAG,CAACC,QAAJ,CAAa5B,IAAb,CAAkB,CAAlB,EAAqB6B,YACtC,CAPL,CAQH,CAhCI,CAhBmB,CAA/B,C","sourcesContent":["ï»¿Vue.component('blog-settings', {\r\n    mixins: [settingsMixin],\r\n    data: () => ({\r\n        radioGroup: 1,\r\n        siteSettingsValid: false,\r\n        blogSettingsValid: false,\r\n        titleRules: [\r\n            v => !!v.trim() || 'Required',\r\n        ],\r\n        postPerPageRules: [\r\n            v => !!v || 'Required',\r\n            v => /^[0-9]+$/.test(v) || 'Integer only',\r\n            v => (parseInt(v) >= 1 && parseInt(v) <= 50) || 'Must be between 1 and 50',\r\n        ],\r\n        errMsg: '',\r\n    }),\r\n    methods: {\r\n        saveSiteSettings() {\r\n            let payload = {\r\n                title: this.title,\r\n                tagline: this.tagline,\r\n                timeZoneId: this.selectedTimeZoneId,\r\n                googleAnalyticsTrackingID: this.ga,\r\n            };\r\n            axios.post('/admin/settings?handler=siteSettings', payload, this.$root.headers)\r\n                .then(resp => {\r\n                    this.$root.toast('Site settings saved!', 0, 'green');\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.errMsg = err.response.data[0].errorMessage;\r\n                });\r\n        },\r\n        saveBlogSettings() {\r\n            let payload = {\r\n                disqusShortname: this.disqusShortname,\r\n                postListDisplay: this.selectedPostListDisplay,\r\n                allowComments: this.allowComments,\r\n                postPerPage: this.postPerPage,\r\n            };\r\n            axios.post('/admin/settings?handler=blogSettings', payload, this.$root.headers)\r\n                .then(resp => {\r\n                    this.$root.toast('Blog settings saved!', 0, 'green');\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.errMsg = err.response.data[0].errorMessage;\r\n                });\r\n        },\r\n    },\r\n});"],"file":"blog-settings.js"}