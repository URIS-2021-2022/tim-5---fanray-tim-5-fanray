@* Layout for Admin Panel *@
@{
    var currentUser = await userManager.GetUserAsync(Context.User);
    var coreSettings = await settingService.GetSettingsAsync<CoreSettings>();
    var navs = await navigationService.GetMenuAsync(EMenu.Menu1, includeNavUrl: true);
    var menu1NavsJson = JsonConvert.SerializeObject(navs);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @coreSettings.Title</title>
    <link rel="shortcut icon" href="/favicon.ico">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@1.5.22/dist/vuetify.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/admin/css/admin.css" asp-append-version="true" />
    @RenderSection("Styles", required: false)
</head>
<body>
    @Html.AntiForgeryToken()

    <div id="app" v-cloak>
        <v-app light>
            @* Drawer *@
            <v-navigation-drawer :clipped="$vuetify.breakpoint.lgAndUp"
                                 v-model="drawer"
                                 width="230"
                                 fixed
                                 app>
                <v-list dense style="padding-top:10px">
                    <template v-for="nav in adminNavs">
                        <v-list-tile :href="nav.url" :value="nav.active" active-class="admin-active-nav">
                            <v-list-tile-action>
                                <v-icon>{{ nav.icon }}</v-icon>
                            </v-list-tile-action>
                            <v-list-tile-content>
                                <v-list-tile-title>
                                    {{ nav.text }}
                                </v-list-tile-title>
                            </v-list-tile-content>
                            <v-list-tile-action v-show="nav.actionIcon">
                                <v-btn flat icon small color="grey" :href="nav.actionLink">
                                    <v-icon>{{ nav.actionIcon }}</v-icon>
                                </v-btn>
                            </v-list-tile-action>
                        </v-list-tile>
                    </template>
                </v-list>
            </v-navigation-drawer>
            @* Topbar *@
            <v-toolbar :clipped-left="$vuetify.breakpoint.lgAndUp"
                       color="blue darken-3"
                       dark
                       app
                       dense
                       fixed>
                <v-toolbar-side-icon @@click.stop="drawer = !drawer"></v-toolbar-side-icon>
                <img style="margin-left:12px;background-color: white" src="~/admin/img/logo.png" />
                <span class="title ml-2 mr-5 font-weight-light">FANRAY</span>
                <v-spacer></v-spacer>
                <v-menu light offset-y left transition="scale-transition">
                    <v-btn icon slot="activator">
                        <v-avatar size="32px">
                            <img gravatar-email="@currentUser.Email" title="@currentUser.DisplayName" />
                        </v-avatar>
                    </v-btn>
                    <v-list dense>
                        <v-list-tile @@click="">
                            <v-icon class="menu-action-icon">account_circle</v-icon>
                            <v-list-tile-title>Profile</v-list-tile-title>
                        </v-list-tile>
                        <v-list-tile @@click="logout">
                            <v-icon class="menu-action-icon">power_settings_new</v-icon>
                            <v-list-tile-title>Logout</v-list-tile-title>
                        </v-list-tile>
                    </v-list>
                </v-menu>
                <v-menu offset-y v-if="menu1Navs.length > 0">
                    <v-btn icon title="View blog" slot="activator">
                        <v-icon>public</v-icon>
                    </v-btn>
                    <v-list>
                        <v-list-tile v-for="(nav, index) in menu1Navs" :key="index">
                            <v-list-tile-title>
                                <a :href="nav.url" :title="nav.title" style="text-decoration:none">{{ nav.text }}</a>
                            </v-list-tile-title>
                        </v-list-tile>
                    </v-list>
                </v-menu>
                <v-btn icon href="/" title="View blog" v-else>
                    <v-icon>public</v-icon>
                </v-btn>
            </v-toolbar>
            @* Content *@
            <v-content>
                @RenderBody()
            </v-content>
            <v-snackbar :timeout="snackbar.timeout"
                        bottom
                        right
                        :color="snackbar.color"
                        v-model="snackbar.show">
                <span style="font-size:larger">{{ snackbar.text }}</span>
                <v-btn dark flat @@click.native="snackbar.show = false" icon>
                    <v-icon>close</v-icon>
                </v-btn>
            </v-snackbar>
        </v-app>
    </div>
    <environment include="Development">
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/vuetify@1.5.22/dist/vuetify.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/vuetify@1.5.22/dist/vuetify.min.js"></script>
    </environment>
    <script src="https://cdn.jsdelivr.net/npm/axios@0.19.1/dist/axios.min.js"></script>
    @RenderSection("ComponentScripts", required: false)
<script>
        let adminMixin = {
            data: function () {
                return {
                    adminNavs: [
                        { icon: 'insert_drive_file', text: 'Posts', url: '/admin/posts', active: false, actionIcon: 'add_circle', actionLink: '/admin/compose/post' },
                        { icon: 'description', text: 'Pages', url: '/admin/pages', active: false, actionIcon: 'add_circle', actionLink: '/admin/compose/page' },
                        { icon: 'insert_photo', text: 'Media', url: '/admin/media', active: false },
                        { icon: 'folder', text: 'Categories', url: '/admin/categories', active: false },
                        { icon: 'label', text: 'Tags', url: '/admin/tags', active: false },
                        { icon: 'navigation', text: 'Navigation', url: '/admin/navigation', active: false },
                        { icon: 'palette', text: 'Themes', url: '/admin/themes', active: false },
                        { icon: 'settings_input_hdmi', text: 'Plugins', url: '/admin/plugins', active: false },
                        { icon: 'widgets', text: 'Widgets', url: '/admin/widgets', active: false },
                        { icon: 'supervisor_account', text: 'Users', url: '/admin/users', active: false },
                        { icon: 'settings', text: 'Settings', url: '/admin/settings', active: false },
                    ],
                    menu1Navs: @Html.Raw(menu1NavsJson)
                };
            }
        };
</script>
    <script src="~/admin/js/admin.js" asp-append-version="true"></script>
</body>
</html>
