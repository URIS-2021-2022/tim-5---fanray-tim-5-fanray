@page "{postId:int?}"
@model PostModel
@{
    ViewData["Title"] = "Compose Post";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
    <title>@ViewData["Title"] - Fanray</title>
    <link rel="shortcut icon" href="/favicon.ico">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@1.5.22/dist/vuetify.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/admin/css/compose.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/_content/@Model.Theme/css/content.css" asp-append-version="true" />
</head>
<body>
    @Html.AntiForgeryToken()

    <div id="app" v-cloak>
        <div style="visibility:hidden; opacity:0" id="dropzone" v-once>
            <span class="droptext">Drop files to upload</span>
        </div>
        <v-dialog v-model="composerUploadProgress"
                  persistent
                  width="300">
            <v-card color="primary" dark>
                <v-card-text>
                    Uploading ...
                    <v-progress-linear indeterminate
                                       color="white"
                                       class="mb-0"></v-progress-linear>
                </v-card-text>
            </v-card>
        </v-dialog>

        <v-app id="inspire" style="background-color:white">
            @* Drawer *@
            <v-navigation-drawer fixed
                                 :clipped="$vuetify.breakpoint.mdAndUp"
                                 app
                                 v-model="drawer">
                <v-expansion-panel v-model="panel" expand>
                    <v-expansion-panel-content>
                        <div slot="header">Status</div>
                        <v-card>
                            <div v-if="post.published">
                                <v-container fill-height fluid pa-0>
                                    <v-layout fill-height>
                                        <v-flex xs12 align-end flexbox>
                                            <div style="text-align:center;font-size:inherit">
                                                <span style="color:#29B6F6;padding-right: 5px;font-weight:bold">Published</span><span>on {{ post.postDate }}</span>
                                            </div>
                                        </v-flex>
                                    </v-layout>
                                </v-container>
                                <v-card-actions>
                                    <v-btn small
                                           style="width:100%;color:#29B6F6"
                                           color="gray"
                                           @@click="revert">
                                        <v-icon left dark>undo</v-icon>
                                        Revert to draft
                                    </v-btn>
                                </v-card-actions>
                            </div>
                            <div v-if="post.isDraft">
                                <v-container fill-height fluid pa-0>
                                    <v-layout fill-height>
                                        <v-flex xs12 align-end flexbox>
                                            <div style="text-align:center;font-size:inherit">
                                                <span style="color:teal;padding-right: 5px;font-weight:bold">Draft</span><span>saved on {{ post.draftDate }}</span>
                                            </div>
                                        </v-flex>
                                    </v-layout>
                                </v-container>
                            </div>
                            <v-card-text>
                                <v-menu ref="menuDate"
                                        :close-on-content-click="false"
                                        v-model="menuDate"
                                        :return-value.sync="post.postDate"
                                        lazy
                                        transition="scale-transition"
                                        offset-y
                                        full-width
                                        @@input="onFieldsChange">
                                    <v-text-field label="Post Date"
                                                  slot="activator"
                                                  v-model="post.postDate"
                                                  readonly></v-text-field>
                                    <v-date-picker v-model="post.postDate"
                                                   no-title
                                                   scrollable
                                                   @@input="$refs.menuDate.save(post.postDate)"></v-date-picker>
                                </v-menu>
                            </v-card-text>
                        </v-card>
                    </v-expansion-panel-content>
                    <v-expansion-panel-content>
                        <div slot="header">Category & Tags</div>
                        <v-card>
                            <v-card-text>
                                <v-select label="Category"
                                          v-model="post.categoryId"
                                          :items="cats"
                                          item-value="value"
                                          dense
                                          @@input="onFieldsChange"></v-select>
                                <v-combobox label="Tags"
                                            hint="When you type in a new tag use tab to delimit."
                                            v-model="post.tags"
                                            :items="tags"
                                            dense
                                            multiple
                                            small-chips
                                            deletable-chips
                                            @@input="onFieldsChange"></v-combobox>
                            </v-card-text>
                        </v-card>
                    </v-expansion-panel-content>
                    <v-expansion-panel-content>
                        <div slot="header">Slug & Excerpt</div>
                        <v-card>
                            <v-card-text>
                                <v-text-field label="Slug"
                                              v-model="post.slug"
                                              @@input="onFieldsChange"></v-text-field>
                                <v-textarea label="Excerpt"
                                            style="font-size:14px"
                                            v-model="post.excerpt"
                                            auto-grow
                                            @@input="onFieldsChange"></v-textarea>
                            </v-card-text>
                        </v-card>
                    </v-expansion-panel-content>
                </v-expansion-panel>
                @*<v-footer class="pa-3" absolute style="height:auto">
                        <v-layout justify-center>
                            <a target="_blank" style="text-decoration:none" href="https://github.com/FanrayMedia/Fanray/wiki/Using-the-Composer" title="How to use the composer">
                                <v-icon large color="info">help_outline</v-icon>
                            </a>
                        </v-layout>
                    </v-footer>*@
            </v-navigation-drawer>
            @* Topbar *@
            <v-toolbar color="blue darken-3"
                       dark
                       app
                       :clipped-left="$vuetify.breakpoint.mdAndUp"
                       fixed>
                <v-toolbar-side-icon @@click.stop="drawer = !drawer"></v-toolbar-side-icon>
                <v-btn @@click="pub" :disabled="disablePubButton" color="orange">{{ pubText }}</v-btn>
                <v-btn @@click="saveDraft" flat small v-if="saveVisible" :disabled="saveDisabled" color="orange">{{ saveText }}</v-btn>
                <v-spacer></v-spacer>
                <v-btn @@click="preview">Preview</v-btn>
                <v-btn href="/admin">Close</v-btn>
            </v-toolbar>
            @* Editor *@
            <v-content>
                <div id="content-area" style="padding-bottom:630px">
                    <v-textarea tabindex="1"
                                id="post-title"
                                label=""
                                auto-grow
                                placeholder="Title"
                                aria-label="Edit title"
                                rows="1"
                                @@input="onFieldsChange"
                                @@keyup.enter="titleEnter"
                                v-model="post.title"></v-textarea>

                    <textarea name="content" id="editor">{{ post.body }}</textarea>
                </div>
            </v-content>
            @* Image Dialog *@
            <v-dialog v-model="mediaDialogVisible" lazy
                      @@keydown.esc="closeMediaDialog"
                      content-class="media-dialog">
                <blog-media mode="editor"></blog-media>
            </v-dialog>
            @* Preview Dialog *@
            <v-dialog lazy
                      fullscreen
                      scrollable
                      v-model="previewDialogVisible"
                      @@keydown.esc="closePreview"
                      content-class="preview-dialog">
                <v-card height="100%">
                    <v-card-title>
                        <span class="preview-title">Preview</span>
                        <v-spacer></v-spacer>
                        <span class="preview-title-url">{{ postUrl }}</span>
                        <v-spacer></v-spacer>
                        <v-btn @@click="closePreview">Close</v-btn>
                    </v-card-title>
                    <v-divider></v-divider>
                    <v-card-text class="preview-body">
                        <iframe class="preview-frame"
                                v-if="previewUrl"
                                :src="previewUrl"
                                title="Preview"></iframe>
                    </v-card-text>
                </v-card>
            </v-dialog>
            @* Snackbar *@
            <v-snackbar :timeout="3000"
                        bottom
                        right
                        :color="snackbar.color"
                        v-model="snackbar.show">
                <span style="font-size:larger">{{ snackbar.text }}</span>
                <v-btn dark flat @@click.native="snackbar.show = false" icon>
                    <v-icon>close</v-icon>
                </v-btn>
            </v-snackbar>
        </v-app>
    </div>
    <environment include="Development">
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/vuetify@1.5.22/dist/vuetify.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/vuetify@1.5.22/dist/vuetify.min.js"></script>
    </environment>
    <script src="https://cdn.jsdelivr.net/npm/vuex@3.1.2/dist/vuex.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@0.19.1/dist/axios.min.js"></script>
    <script src="~/admin/js/ckeditor.js" asp-append-version="true"></script>
    <partial name="Shared/MediaTemplate" />
    <script>
        let mediaMixin = {
            data: function () {
                return {
                    images: [],
                    count: 0,
                    pageSize: @MediaModel.PAGE_SIZE,
                    maxImageFileSize: @ImageService.Max_File_Size,
                    validFileTypes: @Html.Raw(ImageService.ValidFileTypesJson),
                    errFileType: '@ImageService.ERR_MSG_FILETYPE',
                    errFileSize: '@ImageService.ERR_MSG_FILESIZE',
                };
            }
        };
        let composeMixin = {
            data: function () {
                return {
                    post: @Html.Raw(Model.PostJson),
                    cats: @Html.Raw(Model.CatsJson),
                    tags: @Html.Raw(Model.TagsJson),
                    autosaveInterval: @(PostModel.AUTOSAVE_INTERVAL * 1000),
                }
            }
        };
    </script>
    <script src="~/admin/js/blog-media.js" asp-append-version="true"></script>
    <script src="~/admin/js/compose-post.js" asp-append-version="true"></script>    
</body>
</html>